/*
 * This file is generated by jOOQ.
 */
package inventory.generated.jooq.tables.records;


import inventory.generated.jooq.tables.ItemInventory;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ItemInventoryRecord extends UpdatableRecordImpl<ItemInventoryRecord> implements Record5<Integer, String, String, Byte, String> {

    private static final long serialVersionUID = 161038299;

    /**
     * Setter for <code>item_inventory.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>item_inventory.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>item_inventory.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>item_inventory.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>item_inventory.inventory</code>.
     */
    public void setInventory(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>item_inventory.inventory</code>.
     */
    public String getInventory() {
        return (String) get(2);
    }

    /**
     * Setter for <code>item_inventory.active</code>.
     */
    public void setActive(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>item_inventory.active</code>.
     */
    public Byte getActive() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>item_inventory.description</code>.
     */
    public void setDescription(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>item_inventory.description</code>.
     */
    public String getDescription() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, Byte, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, String, Byte, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ItemInventory.ITEM_INVENTORY.ID;
    }

    @Override
    public Field<String> field2() {
        return ItemInventory.ITEM_INVENTORY.NAME;
    }

    @Override
    public Field<String> field3() {
        return ItemInventory.ITEM_INVENTORY.INVENTORY;
    }

    @Override
    public Field<Byte> field4() {
        return ItemInventory.ITEM_INVENTORY.ACTIVE;
    }

    @Override
    public Field<String> field5() {
        return ItemInventory.ITEM_INVENTORY.DESCRIPTION;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getInventory();
    }

    @Override
    public Byte component4() {
        return getActive();
    }

    @Override
    public String component5() {
        return getDescription();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getInventory();
    }

    @Override
    public Byte value4() {
        return getActive();
    }

    @Override
    public String value5() {
        return getDescription();
    }

    @Override
    public ItemInventoryRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ItemInventoryRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public ItemInventoryRecord value3(String value) {
        setInventory(value);
        return this;
    }

    @Override
    public ItemInventoryRecord value4(Byte value) {
        setActive(value);
        return this;
    }

    @Override
    public ItemInventoryRecord value5(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public ItemInventoryRecord values(Integer value1, String value2, String value3, Byte value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ItemInventoryRecord
     */
    public ItemInventoryRecord() {
        super(ItemInventory.ITEM_INVENTORY);
    }

    /**
     * Create a detached, initialised ItemInventoryRecord
     */
    public ItemInventoryRecord(Integer id, String name, String inventory_, Byte active, String description) {
        super(ItemInventory.ITEM_INVENTORY);

        set(0, id);
        set(1, name);
        set(2, inventory_);
        set(3, active);
        set(4, description);
    }
}
